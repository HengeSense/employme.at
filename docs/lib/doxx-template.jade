mixin dropDown(subFolder, subFiles)
  if subFolder != '' && subFiles.length > 0
    li.dropdown
      a.dropdown-toggle(href="#",data-toggle="dropdown",unselectable="on") #{subFolder}&nbsp;
        b.caret
      ul.dropdown-menu
        each subFile in subFiles
          li: a(href="#{subFile.rel}") #{subFile.file}

mixin iForSymbolType(symbol)
  i(class=["alert", "alert-"+(symbol.type === "function" || symbol.type === "method" ? "info":"success")])

mixin labelForSymbolType(symbol)
  div(class=["label", "label-"+(symbol.gtype === "function" || symbol.gtype === "method" ? "info":"success"), "radius", "ctx-type"])= symbol.ctx.type

!!!5
//if IE 8
  |<html class="no-js lt-ie9">
//if gt IE 8
  |<!--> <html class="no-js"> <!--
head
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible', content='IE=edge')
  title Javascript documentation
  meta(name='description', content='Javascript documentation')
  meta(name='viewport', content='width=device-width,initial-scale=1')
  link(rel='stylesheet', href='/bootstrap/dist/css/bootstrap.min.css')
  link(rel='stylesheet', href='/css/bootstrap-docs.css')
  link(rel='stylesheet', href='/prismjs/prism.css')
body(data-spy='scroll', data-target='#sub-nav')
  header.navbar.navbar-inverse.navbar-fixed-top.bs-docs-nav(role='banner')
    .container
      .navbar-header
        button.navbar-toggle(type='button', data-toggle='collapse', data-target='.bs-navbar-collapse')
          span.sr-only Toggle navigation
          span.icon-bar
          span.icon-bar
          span.icon-bar
        a.navbar-brand(href='index.html') Javascript documentation
      nav.collapse.navbar-collapse.bs-navbar-collapse(role='navigation')
        ul.nav.navbar-nav
          - var cacheFolder = ''
          - var subs = []
          each path in files
            - var folder = path.name.substring(0,path.name.indexOf('/'))
            - var file = path.name.substring(path.name.indexOf('/')+1).replace('.js', '')

            if folder != cacheFolder
              mixin dropDown(cacheFolder, subs)
              - cacheFolder = folder
              - subs = []

            if folder == ''
              li: a(href="#{path.relName}") #{file}
            else
              - subs.push({'file': file, 'rel': path.relName})

          mixin dropDown(cacheFolder, subs)

  .container.bs-docs-container
    .row
      .col-md-3
        .bs-sidebar.hidden-print.affix(role='complementary', id='sub-nav')
          ul.nav.bs-sidenav
            each symbol in dox
              if symbol.ctx.name
                li
                  a(href='##{symbol.ctx.name}')= symbol.ctx.name
      .col-md-9(role='main')
        if locals.readme
          section(id=name) !{readme}
        else
          - var header = locals.name.replace('.js', '')
          h1 #{header}
        each symbol in dox
          if symbol.ctx.name
            section(id=symbol.ctx.name)
              h2(id='#{symbol.ctx.name}')= symbol.ctx.name
              h5.subheader
              if !symbol.gtype && symbol.type
                p
                  div(class=["label", "label-inverse", "radius", "ctx-type"])= symbol.type
              else
                p
                  mixin labelForSymbolType(symbol)
                  if symbol.ctx.string
                    span= symbol.ctx.string
                  if symbol.return
                    |  ->
                    span= symbol.return

          if symbol.hasParams
            table.table.table-bordered.table-striped
              thead
                tr
                  th(style="width:20%") Option name
                  th(style="width:20%") Type
                  th Description
              tbody
                each tag in symbol.tags
                  if tag.type == 'param'
                    tr
                      td= tag.name
                      td= tag.types
                      td= tag.description

          .description.language-javascript !{symbol.description.full} !{symbol.description.extra}

  script(src='/jquery/jquery.js')
  script(src='/bootstrap/dist/js/bootstrap.js')
  script(src='/prismjs/prism.js')